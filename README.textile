h2. What is Spring Security OAuth client ?

If you want to "do" Spring, Security and OAuth, you could use the Spring Security OAuth library or one of the Spring Social libraries.

But I think that in the vast majority of the use cases, you JUST want to :
- protect your application by authenticating at the OAuth provider (like Facebook for example)
- get your OAuth profile (first name, last name, birthdate...)  after being authenticated.

*That's exactly what this Spring Security OAuth client library does.* It's based on my "scribe-up library":https://github.com/leleuj/scribe-up (which deals with OAuth authentication and user profile retrieval).

h2. OAuth providers supported

| DropBox (OAuth 1.0) | Facebook (OAuth 2.0) | Github (OAuth 2.0) | Google (OAuth 1.0 & 2.0) | LinkedIn (OAuth 1.0) | Twitter (OAuth 1.0) | Windows Live (OAuth 2.0) | WordPress (OAuth 2.0) | Yahoo (OAuth 1.0) |

Look at the "description of the providers and profiles":https://github.com/leleuj/scribe-up/wiki/Description-of-providers-and-profiles or follow the guide to "extend or add a new provider":https://github.com/leleuj/scribe-up/wiki/Extend-or-add-a-new-provider.

h2. Technical description

This library has **ONLY 4 classes** :
# the **OAuthAuthenticationEntryPoint** class redirects the user to the OAuth provider
# the **OAuthAuthenticationFilter** class is called after OAuth authentication (on the /j_spring_oauth_security_check url) : it creates the OAuthAuthenticationToken token and calls the authentication manager to do the authentication
# the **OAuthAuthenticationToken** class is the token for an OAuth authentication (= OAuth credentials + the user profile)
# the **OAuthAuthenticationProvider** class is the provider responsible for authenticating OAuthAuthenticationToken tokens : it calls the OAuth provider to get the access token and the user profile and computes the authorities.

h2. The sample (a web app on localhost:8080/demo working with Facebook)

<pre><code><bean id="facebookProvider" class="org.scribe.up.provider.impl.FacebookProvider">
  <property name="key" value="xxxx" />
  <property name="secret" value="yyyy" />
  <property name="callbackUrl" value="http://localhost:8080/demo/j_spring_oauth_security_check" />
</bean>

<bean id="oauthEntryPoint" class="com.github.leleuj.ss.oauth.client.web.OAuthAuthenticationEntryPoint">
  <property name="provider" ref="facebookProvider" />
</bean>

<bean id="oauthFilter" class="com.github.leleuj.ss.oauth.client.web.OAuthAuthenticationFilter">
  <property name="provider" ref="facebookProvider" />
  <property name="authenticationManager" ref="authenticationManager" />
</bean>

<bean id="oauthProvider" class="com.github.leleuj.ss.oauth.client.authentication.OAuthAuthenticationProvider">
  <property name="provider" ref="facebookProvider" />
</bean>

<security:authentication-manager alias="authenticationManager">
  <security:authentication-provider ref="oauthProvider" />
</security:authentication-manager>

<security:http entry-point-ref="oauthEntryPoint">
  <security:custom-filter before="CAS_FILTER" ref="oauthFilter" />
  <security:intercept-url pattern="/protected/*" access="IS_AUTHENTICATED_FULLY" />
  <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
  <security:logout />
</security:http></code></pre>

A demo with Facebook and Twitter is available at : "https://github.com/leleuj/spring-security-oauth-client-demo":https://github.com/leleuj/spring-security-oauth-client-demo.

h2. Versions

<pre><code><dependency>
   <groupId>com.github.leleuj.springframework.security</groupId>
   <artifactId>spring-security-oauth-client</artifactId>
   <version>1.0.0-SNAPSHOT</version>
</dependency>
</code></pre>
The version 1.0.0-SNAPSHOT is under development. It's available on "Sonatype snapshots repository":https://oss.sonatype.org/content/repositories/snapshots/ as Maven dependency.

h2. Contact

Find me on "LinkedIn":http://www.linkedin.com/in/jleleu or by email : leleuj@gmail.com
